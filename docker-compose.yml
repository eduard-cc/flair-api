services:
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "${EMAIL_PORT}:${EMAIL_PORT}"
      - "${EMAIL_UI_PORT}:${EMAIL_UI_PORT}"

  redis:
    image: redis
    container_name: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"

  redisinsight:
    image: redislabs/redisinsight
    container_name: redisinsight
    ports:
      - "${REDIS_INSIGHT_PORT}:${REDIS_INSIGHT_PORT}"
    environment:
      RI_REDIS_HOST: ${REDIS_HOST}
      RI_REDIS_PORT: ${REDIS_PORT}
    volumes:
      - redisinsight_data:/db
    depends_on:
      - redis

  postgres:
    image: postgres
    restart: always
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin4
      # disables login and master password prompt
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    # chmod 600 means only the owner of the file has read/write access
    entrypoint: /bin/sh -c "chmod 600 /pgpass; /entrypoint.sh;"
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
      - source: pgpass
        target: /pgpass
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
  redisinsight_data:
    driver: local

# automatically connects pgadmin to the database server on startup
configs:
  pgpass:
    content: postgres:${DB_PORT}:*:${DB_USERNAME}:${DB_PASSWORD}
  servers.json:
    content: |
      {"Servers": {"1": {
        "Group": "Servers",
        "Name": "${DB_NAME}",
        "Host": "postgres",
        "Port": ${DB_PORT},
        "MaintenanceDB": "${DB_NAME}",
        "Username": "${DB_USERNAME}",
        "Password": "${DB_PASSWORD}",
        "SSLMode": "prefer"
      }}}